import datetime

import pytest
import responses

import RashlyOutlaid.api as shadowserver

query_responses = {
    "dfe1832e02888422f48d6896dc8e8f73": {
        "url": "https://api.shadowserver.org/malware/info?sample=dfe1832e02888422f48d6896dc8e8f73",
        "response": [
            {
                "entropic": "5.952427",
                "tlsh": "c1b52a5273fa0254f2f35f75a8b7a3944939fea11d22e08e1164314d88b6f808e75bb7",
                "last_seen": "2016-08-25 02:44:39",
                "magic": "PE32 executable (GUI) Intel 80386, for MS Windows",
                "filesize": "2438340",
                "timestamp": "2016-08-25 02:44:39",
                "sha512": "7ca1fdfe537913b8854227efc1f11b00d405f2d21e416e7023c4ebed2bfa887d2bc4d4d553ce41667c99def47ea05e6ce4a773c4ee7173927f1d263e724c16c2",
                "import_hash": "33f98db5bdb6a7013d52f0120248df35",
                "adobe_malware_classifier": "malicious",
                "md5": "dfe1832e02888422f48d6896dc8e8f73",
                "sha1": "c56ba498d41caa7be3c1eb5588cec27c413eb208",
                "sha256": "d8d395f8744335fba53b0a4308e7b380a0aca86bfc8939ded9f4c8c5cb1e838a",
                "type": "exe",
                "anti_virus": [
                    {"signature": "Troj/Agent-APCU", "vendor": "Sophos"},
                    {"signature": "W32/Lamer.CQ", "vendor": "Fortinet"},
                    {"vendor": "Clam", "signature": "PUA.Win.Packer.Purebasic-2"},
                    {"vendor": "AVG", "signature": "Win32.Generic.VC"},
                    {
                        "signature": "Gen:Win32.FileInfector.uwZ@a4T!Kcmi",
                        "vendor": "MicroWorld",
                    },
                    {"signature": "Virus ( 004d554e1 )", "vendor": "K7GW"},
                    {"vendor": "QuickHeal", "signature": "W32.Sivis.A5"},
                    {"vendor": "AhnLab", "signature": "Trojan/Win32.FileInfector"},
                    {"vendor": "Avast", "signature": "Win32:Malware-gen"},
                    {
                        "signature": "Trojan.PWS.Onlinegames.KEGA",
                        "vendor": "BitDefender",
                    },
                    {"signature": "Trojan.GenericKD.40542465", "vendor": "BitDefender"},
                    {"vendor": "Ikarus", "signature": "Gen.Win32.FileInfector"},
                    {"vendor": "Sunbelt", "signature": "Virus.Win32.sivis.a"},
                    {
                        "vendor": "BitDefender",
                        "signature": "Gen:Win32.FileInfector.uwZ@a4T!Kcmi",
                    },
                    {"signature": "PUA.Win.Packer.Purebasic-2", "vendor": "Clam"},
                    {
                        "signature": "Gen:Win32.Backdoor.ozZbauKWKdpb",
                        "vendor": "BitDefender",
                    },
                    {"vendor": "AVG", "signature": "Win32.Generic.VC"},
                    {"signature": "Virus ( 004d554e1 )", "vendor": "K7GW"},
                    {"signature": "Win32.HLLW.Siggen.4657", "vendor": "DrWeb"},
                    {"signature": "TR/Dropper.Gen8", "vendor": "Avira"},
                    {"vendor": "Eset", "signature": "Win32/Zatoxp.C"},
                    {"signature": "Win32:Malware-gen", "vendor": "Avast"},
                    {"vendor": "K7", "signature": "Virus ( 004d554e1 )"},
                    {"signature": "Trojan/Win32.FileInfector", "vendor": "AhnLab"},
                    {"signature": "Win32:Lamer-A", "vendor": "Avast"},
                    {
                        "signature": "Gen:Win32.FileInfector.uwZ@a4T!Kcmi",
                        "vendor": "BitDefender",
                    },
                ],
                "first_seen": "2016-08-25 02:44:39",
                "pehash": "243c35935ecc9829f30b30c45839cbf6",
            }
        ],
        "status": 200,
    }
}


@responses.activate
def test_query() -> None:

    responses.add(
        responses.GET,
        query_responses["dfe1832e02888422f48d6896dc8e8f73"]["url"],
        json=query_responses["dfe1832e02888422f48d6896dc8e8f73"]["response"],
        status=query_responses["dfe1832e02888422f48d6896dc8e8f73"]["status"],
    )

    result = shadowserver.malware(["dfe1832e02888422f48d6896dc8e8f73"])[0]

    assert isinstance(result.timestamp, datetime.datetime)
    assert isinstance(result.first_seen, datetime.datetime)
    assert isinstance(result.last_seen, datetime.datetime)
    assert isinstance(result.type, str)
    assert isinstance(result.sha256, str)
    assert isinstance(result.md5, str)
    assert isinstance(result.sha1, str)
    assert isinstance(result.pehash, str)
    assert isinstance(result.tlsh, str)
    assert isinstance(result.import_hash, str)
    assert isinstance(result.filesize, str)
    assert isinstance(result.adobe_malware_classifier, str)
    assert isinstance(result.entropy, str)
    assert isinstance(result.magic, str)
    assert isinstance(result.anti_virus, list)
    assert result.entropy == "5.952427"
    assert result.timestamp == datetime.datetime(2016, 8, 25, 2, 44, 39)
    assert result.first_seen == datetime.datetime(2016, 8, 25, 2, 44, 39)
    assert result.last_seen == datetime.datetime(2016, 8, 25, 2, 44, 39)
    assert result.type == "exe"
    assert (
        result.sha256
        == "d8d395f8744335fba53b0a4308e7b380a0aca86bfc8939ded9f4c8c5cb1e838a"
    )
    assert result.md5 == "dfe1832e02888422f48d6896dc8e8f73"
    assert result.pehash == "243c35935ecc9829f30b30c45839cbf6"
    assert (
        result.tlsh
        == "c1b52a5273fa0254f2f35f75a8b7a3944939fea11d22e08e1164314d88b6f808e75bb7"
    )
    assert result.import_hash == "33f98db5bdb6a7013d52f0120248df35"
    assert result.filesize == "2438340"
    assert result.adobe_malware_classifier == "malicious"
    assert result.magic == "PE32 executable (GUI) Intel 80386, for MS Windows"
    assert len(result.anti_virus) == 26

    for av in result.anti_virus:
        assert isinstance(av, shadowserver.AVRecord)
        assert av.md5 is None or isinstance(av.md5, str)
        assert av.vendor is None or isinstance(av.vendor, str)
        assert av.signature is None or isinstance(av.signature, str)
        assert av.timestamp is None or isinstance(av.timestamp, datetime.datetime)


@responses.activate
def test_iterator() -> None:

    responses.add(
        responses.GET,
        query_responses["dfe1832e02888422f48d6896dc8e8f73"]["url"],
        json=query_responses["dfe1832e02888422f48d6896dc8e8f73"]["response"],
        status=query_responses["dfe1832e02888422f48d6896dc8e8f73"]["status"],
    )

    result = shadowserver.malware(["dfe1832e02888422f48d6896dc8e8f73"])[0]
    result2 = shadowserver.MalwareRecord(*list(result))

    assert result == result2
